For Solving this problem, I buld an adjacent matrix the initialized to 'inf'. the aim of the matrix is for the connection of every 2 pepole.
For every 2 pepole, the first person connect to the second and vice versa.
After the matrix is build fully, to get the maximum degree of separation I run on the adjacent matrix Floydâ€“Warshall algorithm.
Now, I can run over my matrix and check what is the max degree between the shortest ath I got from floyd.
Its importent to remember that if I found a path that equal to ind its mean the network is disconnected.

The time complexity:
Building the Adjacency Matrix: O(r).
Floyd-Warshall Algorithm: O(p^3).
Checking for Disconnected Network and Maximum Degree: (p^2).
Overall, the time complexity of the code is O(r + p^3 + p^2).
Where 'r' represents the number of edges and 'p' represents the number of vertices.